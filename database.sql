CREATE TABLE "user" (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    state VARCHAR(255) NOT NULL,
    city VARCHAR(255) NOT NULL,
    date_of_birth DATE NOT NULL,
    password VARCHAR(1000) NOT NULL,
    email VARCHAR(255) NOT NULL,
    access_level VARCHAR(255) NOT NULL
);

CREATE TABLE family (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE user_family (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    user_id INT REFERENCES "user"(id),
    family_id INT REFERENCES family(id)
);

CREATE TABLE event (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    date DATE NOT NULL,
    detail TEXT,
    family_id INT REFERENCES family(id),
    time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    type VARCHAR(255)
);

CREATE TABLE user_event (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    event_id INT REFERENCES event(id),
    user_id INT REFERENCES "user"(id),
    attending BOOLEAN NOT NULL
);

CREATE TABLE resource (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    access_level VARCHAR(255) NOT NULL
);

CREATE TABLE question (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    question_body VARCHAR (255) 
);

CREATE TABLE response (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    user_id INT REFERENCES "user"(id),
    date DATE NOT NULL,
    question_id INT REFERENCES question(id),
    response TEXT,
    score INT
);

CREATE TABLE prompt (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    detail TEXT
);

CREATE TABLE journal (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    prompt_id INT REFERENCES prompt(id),
    user_id INT REFERENCES "user"(id),
    date DATE NOT NULL,
    detail TEXT
);